= apiman with an external postgres database
This demo has one wildfly server with the 4 apiman capabilities:

* APIManager UI
* APIManager backend
* APIGateway config
* APIGateway runtime

Plus also the Keycloak server is on the same wildfly instance, and using an embedded H2 database.

apiman schema is created in a postgres database, and apiman is configured to use that postgres database. For this, the apiman instance has the following changes over the official one:

* the postgres jdbc driver (postgresql-9.3-1102.jdbc41.jar)
* apiman-ds.xml

----
<?xml version="1.0" encoding="UTF-8"?>
<datasources xmlns="http://www.jboss.org/ironjacamar/schema">
	<datasource enabled="true" jndi-name="jdbc/ApiManagerDS" pool-name="apiman-manager-api" use-java-context="true">
		<connection-url>jdbc:postgresql://postgresserver:5432/apiman</connection-url>
		<driver>postgresql-9.3-1102.jdbc41.jar</driver>
		<pool>
			<max-pool-size>30</max-pool-size>
		</pool>
		<security>
			<user-name>apiman</user-name>
			<password>apiman_p123</password>
		</security>
	</datasource>
</datasources>
----


== How to run the demo
As postgres docker image needs to create the database the first time it runs, it will take some time, so you should start the postgres service, wait some time, and start apiman. This is only required for the first boot.

----
$ fig up -d postgres && sleep 10 && fig up apiman
----

Then after a first boot, you can do:

----
fig up
----

== Endpoints and ports
The demo will expose 3 ports on localhost:

- http://localhost:8080/apiman-manager[http://localhost:8080/apiman-manager (APIManager UI)]
- http://localhost:9990/console[http://localhost:9990/console (Wildfly console)]
- jdbc:postgresql://localhost:5432/apiman (apiman database)


== Cleanup
To clean everything up, do:

----
fig -y rm
----


== TIPS

=== Run a postgres Database standalone with docker
To run a postgres database from scratch, with docker, run:

----
docker run --name postgres --rm -p 5432:5432 -e POSTGRES_USER=apiman -e POSTGRES_PASSWORD=apiman_p123 -it --rm postgres
----
